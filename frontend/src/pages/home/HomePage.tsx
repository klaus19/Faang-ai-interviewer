import React, { useState, useEffect } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { 
  Code, 
  Clock, 
  Target, 
  TrendingUp, 
  Zap, 
  CheckCircle,
  ArrowRight,
  Play,
  BarChart3
} from 'lucide-react';
import { ApiService, isApiAvailable } from '../../services/api';

export const HomePage: React.FC = () => {
  const navigate = useNavigate();
  const [isBackendConnected, setIsBackendConnected] = useState<boolean | null>(null);
  const [stats, setStats] = useState<any>(null);

  useEffect(() => {
    checkBackendConnection();
    fetchStats();
  }, []);

  const checkBackendConnection = async () => {
    const connected = await isApiAvailable();
    setIsBackendConnected(connected);
  };

  const fetchStats = async () => {
    try {
      const data = await ApiService.getQuestionStats();
      setStats(data);
    } catch (error) {
      console.log('Stats not available:', error);
    }
  };

  const features = [
    {
      icon: Code,
      title: 'AI-Generated Questions',
      description: 'Practice with unique coding problems generated by advanced AI, tailored to FAANG interview standards.',
      color: 'text-blue-600'
    },
    {
      icon: Clock,
      title: 'Timed Practice',
      description: 'Simulate real interview conditions with customizable time limits and pressure scenarios.',
      color: 'text-green-600'
    },
    {
      icon: Target,
      title: 'Smart Analysis',
      description: 'Get detailed feedback on code quality, efficiency, and interview performance with AI insights.',
      color: 'text-purple-600'
    },
    {
      icon: TrendingUp,
      title: 'Progress Tracking',
      description: 'Monitor your improvement over time with comprehensive analytics and personalized recommendations.',
      color: 'text-orange-600'
    }
  ];

  const difficultyLevels = [
    {
      level: 'Easy',
      description: 'Perfect for beginners and warming up',
      color: 'bg-green-100 text-green-800',
      buttonColor: 'btn-success'
    },
    {
      level: 'Medium', 
      description: 'Most common in FAANG interviews',
      color: 'bg-yellow-100 text-yellow-800',
      buttonColor: 'btn-primary'
    },
    {
      level: 'Hard',
      description: 'Challenge yourself with complex problems',
      color: 'bg-red-100 text-red-800', 
      buttonColor: 'btn-danger'
    }
  ];

  const startInterview = (difficulty: string) => {
    navigate('/interview', { 
      state: { 
        difficulty: difficulty.toLowerCase(),
        autoStart: true 
      } 
    });
  };

  return (
    <div className="min-h-screen">
      {/* Hero Section */}
      <section className="bg-gradient-to-r from-blue-600 to-purple-700 text-white py-20">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center">
            <h1 className="text-4xl md:text-6xl font-bold mb-6">
              Master FAANG Interviews with{' '}
              <span className="text-gradient bg-gradient-to-r from-yellow-400 to-pink-400 bg-clip-text text-transparent">
                AI-Powered Practice
              </span>
            </h1>
            <p className="text-xl md:text-2xl mb-8 max-w-3xl mx-auto text-blue-100">
              Practice coding interviews with AI-generated questions, real-time analysis, 
              and personalized feedback to land your dream job at top tech companies.
            </p>
            
            {/* Connection Status */}
            <div className="mb-8">
              {isBackendConnected === null ? (
                <div className="flex items-center justify-center space-x-2 text-blue-200">
                  <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white"></div>
                  <span>Checking system status...</span>
                </div>
              ) : isBackendConnected ? (
                <div className="flex items-center justify-center space-x-2 text-green-300">
                  <CheckCircle className="h-5 w-5" />
                  <span>âœ… System Ready - AI Powered</span>
                </div>
              ) : (
                <div className="bg-yellow-500 bg-opacity-20 border border-yellow-400 rounded-lg p-3 max-w-md mx-auto">
                  <p className="text-yellow-100 text-sm">
                    ðŸ”„ Backend offline - Using demo mode with enhanced mock data
                  </p>
                </div>
              )}
            </div>

            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <button
                onClick={() => startInterview('Medium')}
                className="bg-white text-blue-600 hover:bg-blue-50 font-bold py-4 px-8 rounded-lg text-lg transition-all duration-200 transform hover:scale-105 flex items-center justify-center space-x-2"
              >
                <Play className="h-5 w-5" />
                <span>Start Practice Interview</span>
              </button>
              <Link
                to="/dashboard"
                className="border-2 border-white text-white hover:bg-white hover:text-blue-600 font-bold py-4 px-8 rounded-lg text-lg transition-all duration-200 flex items-center justify-center space-x-2"
              >
                <BarChart3 className="h-5 w-5" />
                <span>View Dashboard</span>
              </Link>
            </div>
          </div>
        </div>
      </section>

      {/* Quick Start Section */}
      <section className="py-16 bg-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold text-gray-900 mb-4">
              Choose Your Challenge Level
            </h2>
            <p className="text-lg text-gray-600">
              Select the difficulty that matches your current skill level
            </p>
          </div>

          <div className="grid md:grid-cols-3 gap-8">
            {difficultyLevels.map((level, index) => (
              <div key={level.level} className="bg-white border border-gray-200 rounded-xl p-6 hover:shadow-lg transition-shadow">
                <div className="text-center">
                  <span className={`inline-block px-3 py-1 rounded-full text-sm font-medium ${level.color} mb-4`}>
                    {level.level}
                  </span>
                  <h3 className="text-xl font-semibold text-gray-900 mb-2">
                    {level.level} Problems
                  </h3>
                  <p className="text-gray-600 mb-6">
                    {level.description}
                  </p>
                  <button
                    onClick={() => startInterview(level.level)}
                    className={`w-full ${level.buttonColor} flex items-center justify-center space-x-2`}
                  >
                    <span>Start {level.level}</span>
                    <ArrowRight className="h-4 w-4" />
                  </button>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Features Section */}
      <section className="py-16 bg-gray-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-12">
            <h2 className="text-3xl font-bold text-gray-900 mb-4">
              Why Choose Our AI Interviewer?
            </h2>
            <p className="text-lg text-gray-600">
              Experience the most advanced interview preparation platform
            </p>
          </div>

          <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
            {features.map((feature, index) => {
              const Icon = feature.icon;
              return (
                <div key={index} className="text-center">
                  <div className={`inline-flex items-center justify-center w-16 h-16 rounded-full bg-white shadow-md mb-4`}>
                    <Icon className={`h-8 w-8 ${feature.color}`} />
                  </div>
                  <h3 className="text-lg font-semibold text-gray-900 mb-2">
                    {feature.title}
                  </h3>
                  <p className="text-gray-600">
                    {feature.description}
                  </p>
                </div>
              );
            })}
          </div>
        </div>
      </section>

      {/* Stats Section */}
      {stats && (
        <section className="py-16 bg-blue-600 text-white">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="text-center mb-12">
              <h2 className="text-3xl font-bold mb-4">Practice Stats</h2>
              <p className="text-blue-200">Real-time system statistics</p>
            </div>
            
            <div className="grid md:grid-cols-3 gap-8 text-center">
              <div>
                <div className="text-4xl font-bold mb-2">{stats.total_questions || '50+'}</div>
                <div className="text-blue-200">Questions Available</div>
              </div>
              <div>
                <div className="text-4xl font-bold mb-2">{stats.ai_enabled ? 'AI' : 'Mock'}</div>
                <div className="text-blue-200">Generation Mode</div>
              </div>
              <div>
                <div className="text-4xl font-bold mb-2">Real-time</div>
                <div className="text-blue-200">Analysis & Feedback</div>
              </div>
            </div>
          </div>
        </section>
      )}

      {/* CTA Section */}
      <section className="py-16 bg-gray-900 text-white">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <h2 className="text-3xl font-bold mb-4">
            Ready to Ace Your Next Interview?
          </h2>
          <p className="text-xl text-gray-300 mb-8">
            Join thousands of developers who've improved their interview skills with our AI-powered platform.
          </p>
          <button
            onClick={() => startInterview('Medium')}
            className="bg-blue-600 hover:bg-blue-700 text-white font-bold py-4 px-8 rounded-lg text-lg transition-all duration-200 transform hover:scale-105 flex items-center justify-center space-x-2 mx-auto"
          >
            <Zap className="h-5 w-5" />
            <span>Start Your First Interview</span>
          </button>
        </div>
      </section>
    </div>
  );
};